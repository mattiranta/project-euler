import sys
import os
import time
import math
os.chdir(os.path.dirname(os.path.abspath(__file__)))

###############################################################################
# Pentagonal numbers are generated by the formula, Pn=n(3n?1)/2.
# The first ten pentagonal numbers are: 1, 5, 12, 22, 35, 51, 70, 92, 117, 145, ...

# It can be seen that P4 + P7 = 22 + 70 = 92 = P8. However,
# their difference, 70 ? 22 = 48, is not pentagonal.

# Find the pair of pentagonal numbers, Pj and Pk, for which their sum and
# difference are pentagonal and D = |Pk ? Pj| is minimised; what is the value of D?
###############################################################################

start = time.clock()

def is_pentagonal(n):
    test = (math.sqrt(24*n + 1) + 1)/6
    return test == int(test)

def pentagonals():
    n = 1
    while True:
        yield int((n * (3 * n - 1))/2)
        n += 1

    return

def pentagonal_pair():
    pent = pentagonals();
    i = 0
    n = []
    while i < 3000:
        i += 1
        n.append(next(pent))

    for i in range(0, len(n)):
        for j in range(i, len(n)):
            if is_pentagonal(n[i] + n[j]) and is_pentagonal(abs(n[i] - n[j])):
                return abs(n[i] - n[j])
    return None

# Main:
import time
start = time.clock()
print("Difference of pentagonal pair: {}".format(pentagonal_pair()))
print ("Time: {}".format(time.clock() - start))
